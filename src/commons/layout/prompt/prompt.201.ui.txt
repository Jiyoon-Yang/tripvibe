아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @02-wireframe.mdc
            - @03-ui.mdc

==============================================

조건-피그마) 활용할MCP: CursorTalkToFigmaMCP(채널명: 47jfjm1g)
조건-피그마) 구현될 컴포넌트 노드ID(navigation): 285:33451

조건-파일경로) 구현될 TSX 파일경로: src/commons/layout/index.tsx
조건-파일경로) 구현될 CSS 파일경로: src/commons/layout/styles.module.css

==============================================

조건-공통목록) 사용할 색상 목록(global.css에 명시된 변수 토큰 활용)
            - 트립토크: gray/B
            - 숙박권 구매: gray/800
            - 마이 페이지: gray/800

조건-공통목록) 사용할 공통컴포넌트 목록
            - <Tabs />, <Searchbar />, <Button />

==============================================

기존요구사항-참고만) MCP를 연동하여 피그마의 디자인을 그대로 소스코드로 구현할 것.

기존요구사항-참고만) 공통컴포넌트는 다음의 규칙을 지켜 step-by-step 으로 구현하고, 적용 결과를 체크리스트로 반환할 것.
            1. 공통컴포넌트 원본을 수정하지 말고, 아래의 props만 활용할 것.
                - theme: light 모드만 사용할 것.
                - size: 피그마와 일치할 것.
                - className 전달: width만 허용할 것.

            2. 적용될 공통컴포넌트 목록을 구현할 것.
                - 네비게이션 버튼: <Tabs />
                - 로그인: <Button />

기존요구사항-참고만) 설치된 swiper 라이브러리 사용해서 캐러셀 구현할 것. 
          - public/images 경로에 있는 banner1,2,3 사용할 것.
          - 내장된 함수를 사용해서 2초에 한번씩 자동으로 넘어가게 구현할 것.
          - 사이즈는 1920px * 516px으로 구현할 것.

기존요구사항-참고만) 로그인버튼에 있는 icon은 public/icons 경로에 있는 아이콘 참고할 것.

==============================================

핵심요구사항) styles_navigationContent의 height이 기존피그마 디자인과 다름, height 값을 80px로 수정할 것, 레이아웃을 justifiy-contnet: center로 정렬할 것.

핵심요구사항) styles_tabs ui는 <Tabs /> 컴포넌트를 사용하지말고 아래 노드ID 참고해서 다시 수정할 것.
            노드ID: 285:33451

